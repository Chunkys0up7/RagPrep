name: Security Scan

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  schedule:
    # Run security scans weekly
    - cron: '0 2 * * 1'

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install security tools
      run: |
        pip install safety bandit pip-audit
        
    - name: Run Safety (dependency vulnerability scan)
      run: |
        safety check --json --output safety-report.json || true
        safety check --full-report
        
    - name: Run Bandit (security linter)
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ -r
        
    - name: Run pip-audit
      run: |
        pip-audit --format json --output pip-audit-report.json || true
        pip-audit
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
          pip-audit-report.json
          
    - name: Comment PR with security findings
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## 🔒 Security Scan Results\n\n';
          
          // Safety report
          if (fs.existsSync('safety-report.json')) {
            const safetyData = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
            if (safetyData.length > 0) {
              comment += '### ⚠️ Dependency Vulnerabilities Found\n\n';
              safetyData.forEach(vuln => {
                comment += `- **${vuln.package}**: ${vuln.vulnerability_id} - ${vuln.advisory}\n`;
              });
              comment += '\n';
            } else {
              comment += '✅ No dependency vulnerabilities found\n\n';
            }
          }
          
          // Bandit report
          if (fs.existsSync('bandit-report.json')) {
            const banditData = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
            if (banditData.results && banditData.results.length > 0) {
              comment += '### 🚨 Code Security Issues Found\n\n';
              banditData.results.forEach(issue => {
                comment += `- **${issue.issue_severity.toUpperCase()}**: ${issue.issue_text} in ${issue.filename}:${issue.line_number}\n`;
              });
              comment += '\n';
            } else {
              comment += '✅ No code security issues found\n\n';
            }
          }
          
          // pip-audit report
          if (fs.existsSync('pip-audit-report.json')) {
            const auditData = JSON.parse(fs.readFileSync('pip-audit-report.json', 'utf8'));
            if (auditData.vulnerabilities && auditData.vulnerabilities.length > 0) {
              comment += '### ⚠️ pip-audit Vulnerabilities Found\n\n';
              auditData.vulnerabilities.forEach(vuln => {
                comment += `- **${vuln.name}**: ${vuln.versions[0].fixed_in} - ${vuln.description}\n`;
              });
              comment += '\n';
            } else {
              comment += '✅ No pip-audit vulnerabilities found\n\n';
            }
          }
          
          comment += '---\n*This comment was automatically generated by the security scan workflow.*';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  dependency-update:
    name: Dependency Update Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install pip-tools
      run: pip install pip-tools
      
    - name: Check for outdated dependencies
      run: |
        pip list --outdated --format=freeze > outdated.txt || true
        if [ -s outdated.txt ]; then
          echo "Found outdated dependencies:"
          cat outdated.txt
          echo "::warning::Some dependencies are outdated. Consider updating them."
        else
          echo "All dependencies are up to date."
        fi
        
    - name: Upload outdated dependencies report
      uses: actions/upload-artifact@v3
      with:
        name: outdated-dependencies
        path: outdated.txt
        
    - name: Create issue for outdated dependencies
      if: hashFiles('outdated.txt') != ''
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          if (fs.existsSync('outdated.txt')) {
            const outdated = fs.readFileSync('outdated.txt', 'utf8');
            
            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['dependencies', 'security']
            });
            
            const existingIssue = issues.data.find(issue => 
              issue.title.includes('Dependency Update Required')
            );
            
            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '🔒 Dependency Update Required',
                body: `## Dependency Update Required
                
                The following dependencies are outdated and may contain security vulnerabilities:
                
                \`\`\`
                ${outdated}
                \`\`\`
                
                **Action Required:**
                - Review outdated packages
                - Update to latest secure versions
                - Test functionality after updates
                - Update requirements.txt
                
                **Security Impact:**
                Outdated dependencies may contain known security vulnerabilities that could be exploited.
                
                ---
                *This issue was automatically generated by the security scan workflow.*`,
                labels: ['dependencies', 'security', 'automated'],
                assignees: ['@Chunkys0up7']
              });
            }
          }
